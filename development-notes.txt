Requirements:
1. Read JSON File
2. Show the results array element in a column with heading labeled "Results" on the page
3. Show the saved array element with heading labeled "Saved Properties" on the page, next to Results column.
4. When mouse hover property card in Results column:
    if the property hasn't been added on Saved Properties list yet, show the "Save Property" button
        When user click "Save Property" button, add that property to Saved Properties list, and still keep that property within the Results column 
5. If the property card on Results column has been added on Saved property list, show "Saved" icon/text somewhere on the property card and do nothing when user mouse hover it. 
6. When mouse hover property card in Saved Properties column:
    Show the "Remove Property" button
        When user click "Remove Property" button, the property will be removed from the Saved Properties list. ---> Not sure, if it's supposed to be removed from the "Results" list as well? No, it will still be on Results list (as both lists are independent)

===============================================================================     

Data structure strategy:
- Create 1 propertyLibrary object to store all properties (both results and saved properties)
- Create 1 savedPropertyID array to store property ID of savedProperty, then use this ID to retrieve the property data from propertyLibrary.


Initial state:
- The Saved Property Set already has 1 existing ID = 4
- The Result column only shows Property ID 1, 2, & 3 instead of all properties under propertyLibrary object

Motivation behind this strategy: 
- to minimise property object duplications that require updates on multiple places when there are data changes.
- to represent real situation more closely, where each user might have their own 'savedProperty' object.

================================================================================

TODO:
<<<<<<< HEAD
[ ] Implement JS Modular pattern
[ ] Implement unit testing
[ ] Consider to make the saved property list to be persistent
[ ] Implement handlebar pre-compilation to improve performance

================================================================================

Module structure:
1. Module init() : for all input data request, data initialisation, compile Handlebar template
2. Module togglePropertySaveStatus
3. Module getSavedProperty

Internal Helper Method:
1. bindEvent() : for save & remove buttons
2. render() : To render Handlebar template, given target HTML element & data 

================================================================================
=======
[x] Implement JS Modular pattern
[x] Implement unit testing
[ ] Consider to make the saved property list to be persistent
[ ] Implement handlebar pre-compilation to improve performance
>>>>>>> 59c423f513fcf99e5921136b2af4e7be761302a5
